{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/ios-study-landmarks-03","result":{"data":{"post":{"__typename":"MdxPost","slug":"/ios-study-landmarks-03","title":"SwiftUI 官方教程实践三","date":"18.10.2020","tags":[{"name":"iOS","slug":"i-os"},{"name":"SwiftUI","slug":"swift-ui"},{"name":"LandMarks","slug":"land-marks"}],"description":"让数据和界面自动响应","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"SwiftUI 官方教程实践三\",\n  \"description\": \"让数据和界面自动响应\",\n  \"date\": \"2020-10-18T00:00:00.000Z\",\n  \"slug\": \"/ios-study-landmarks-03\",\n  \"tags\": [\"iOS\", \"SwiftUI\", \"LandMarks\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u5B98\\u65B9\\u6559\\u7A0B\\u5730\\u5740\\uFF1A\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.apple.com/tutorials/swiftui/handling-user-input\"\n  }), \"\\u70B9\\u51FB\\u8BBF\\u95EE\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"./ios-study-landmarks-01\"\n  }), \"\\u7B2C\\u4E00\\u7BC7\"), \"\\u6559\\u7A0B\\u6559\\u4F1A\\u4E86\\u6211\\u4EEC\\u6784\\u5EFA\\u754C\\u9762\\u7684\\u57FA\\u672C\\u65B9\\u6CD5\\u3002\\u754C\\u9762\\u7684\\u5143\\u7D20\\u90FD\\u662F\\u5199\\u6B7B\\u5728\\u4EE3\\u7801\\u91CC\\u9762\\u7684\\u3002\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"./ios-study-landmarks-02\"\n  }), \"\\u7B2C\\u4E8C\\u7BC7\"), \"\\u6559\\u7A0B\\u6559\\u4F1A\\u4E86\\u521D\\u6B65\\u5199\\u6D3B\\u9875\\u9762\\u6570\\u636E\\u5E76\\u5B66\\u4F1A\\u5982\\u4F55\\u505A\\u9875\\u9762\\u8DF3\\u8F6C\\u3002\"), mdx(\"p\", null, \"\\u800C\\u8FD9\\u4E00\\u7BC7\\u5219\\u662F\\u5728\\u6570\\u636E\\u5199\\u6D3B\\u4E0A\\u66F4\\u8FD1\\u4E00\\u6B65\\uFF0C\\u8BA9\\u6570\\u636E\\u62E5\\u6709\\u751F\\u547D\\uFF0C\\u53EF\\u4EE5\\u81EA\\u52A8\\u7684\\u53BB\\u89E6\\u53D1\\u754C\\u9762\\u7684\\u66F4\\u65B0\\u3002\\u5B8C\\u6210\\u8FD9\\u4E2A\\u6548\\u679C\\uFF0C\\u9700\\u8981\\u4E0B\\u9762\\u51E0\\u4E2A\\u6B65\\u9AA4\\uFF1A\"), mdx(\"h4\", null, \"1. \\u5B9A\\u4E49\\u4E00\\u4E2A\\u5B9E\\u73B0 \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"ObservableObject\"), \" \\u534F\\u8BAE\\u7684\\u5BF9\\u8C61\\uFF0C\\u5C06\\u6570\\u636E\\u5305\\u88F9\\u5728\\u91CC\\u9762\"), mdx(\"p\", null, \"\\u8FD9\\u6837\\u505A\\u7684\\u4F5C\\u7528\\uFF0C\\u5B98\\u65B9\\u539F\\u6C41\\u539F\\u5473\\u7684\\u89E3\\u91CA\\u5982\\u4E0B\\uFF1A\"), mdx(\"p\", null, \"An observable object is a custom object for your data that can be bound to a view from storage in SwiftUI\\u2019s environment. SwiftUI watches for any changes to observable objects that could affect a view, and displays the correct version of the view after a change.\"), mdx(\"p\", null, \"\\u9700\\u8981\\u5728\\u8981\\u88AB\\u52A8\\u6001\\u76D1\\u542C\\u7684\\u5C5E\\u6027\\u4E0A\\u9762\\u589E\\u52A0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@Published\"), \" \\u4FEE\\u9970\\u7B26\\u3002\"), mdx(\"h4\", null, \"2. \\u901A\\u8FC7\\u4E0B\\u9762\\u7684\\u65B9\\u5F0F\\u58F0\\u660E ObservableObject \\u5BF9\\u8C61\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift:title=Swift\"\n  }), \"@EnvironmentObject var userData: UserData\\n\")), mdx(\"h4\", null, \"3. \\u901A\\u8FC7 \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"environmentObject()\"), \" \\u65B9\\u6CD5\\u4F20\\u5165 ObservableObject \\u5BF9\\u8C61\"), mdx(\"p\", null, \"\\u56E0\\u4E3A\\u5149\\u6709\\u7B2C\\u4E8C\\u6B65\\u7684\\u58F0\\u660E\\u8FD8\\u662F\\u6CA1\\u6709\\u7528\\u7684\\uFF0CenvironmentObject \\u662F userData \\u7684\\u6E90\\u5934\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift:title=Swift\"\n  }), \"struct LandmarkList_Previews: PreviewProvider {\\n    static var previews: some View {\\n        LandmarkList()\\n            .environmentObject(UserData())\\n    }\\n}\\n\")), mdx(\"p\", null, \"\\u8FD8\\u6709\\u4E00\\u70B9\\u9700\\u8981\\u6CE8\\u610F\\u7684\\u662F\\uFF0C\\u8FD9\\u4E2A environmentObject \\u662F\\u5168\\u5C40\\u7684\\uFF0C\\u4E5F\\u5C31\\u662F\\u6211\\u4EEC\\u53EA\\u8981\\u5728\\u7A0B\\u5E8F\\u5165\\u53E3\\u7684\\u5730\\u65B9\\u8BBE\\u7F6E\\u4E86\\uFF0C\\u53EF\\u4EE5\\u5728\\u8FD9\\u4E2A\\u7A0B\\u5E8F\\u7684\\u6240\\u6709\\u9875\\u9762\\u4EE3\\u7801\\n\\u91CC\\u9762\\u901A\\u8FC7 @EnvironmentObject \\u6765\\u58F0\\u660E\\u4F7F\\u7528\\uFF0C\\u4E0D\\u8FC7\\u4E3A\\u4E86\\u8BA9 preview \\u5DE5\\u4F5C\\uFF0C\\u6211\\u4EEC\\u9700\\u8981\\u989D\\u5916\\u4E3A preview \\u914D\\u7F6E\\u4E00\\u4E0B\\u800C\\u5DF2\\u3002\"), mdx(\"h4\", null, \"4. \\u5728\\u4F7F\\u7528\\u6570\\u636E\\u7684\\u5730\\u65B9\\uFF0C\\u53EF\\u4EE5\\u6539\\u6210\\u4ECE ObservableObject \\u5BF9\\u8C61\\u4E2D\\u8BFB\\u53D6\\uFF0C\\u8FD9\\u6837\\u5C31\\u53EF\\u4EE5\\u5C06 View \\u548C Data \\u7ED1\\u5B9A\\u4E86\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-swift:title=Swift\"\n  }), \"Toggle(isOn: $userData.showFavoritesOnly) {\\n  Text(\\\"Favorites only\\\")\\n}\\n\")), mdx(\"h4\", null, \"5. \\u81F3\\u6B64\\uFF0C\\u5373\\u53EF\\u5B8C\\u6210 data \\u548C view \\u7684\\u7ED1\\u5B9A\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"官方教程地址： 点击访问 第一篇 教程教会了我们构建界面的基本方法。界面的元素都是写死在代码里面的。 第二篇 教程教会了初步写活页面数据并学会如何做页面跳转。 而这一篇则是在数据写活上更近一步，让数据拥有生命，可以自动的去触发界面的更新。完成这个效果，需要下面几个步骤：…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/ios-study-landmarks-03","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}